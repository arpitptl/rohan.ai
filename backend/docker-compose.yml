version: '3.8'
name: aa-gateway-ai-operations
services:
  # Flask Backend
  aa-gateway-backend:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_DEBUG=true
      - DATABASE_URL=sqlite:///aa_gateway.db
      - USE_REAL_BEDROCK=false
      - PROMETHEUS_PUSHGATEWAY_URL=pushgateway:9091
    volumes:
      - .:/app
      - ./data:/app/data
    depends_on:
      - pushgateway
      - prometheus
    networks:
      - aa-gateway-network

  # Prometheus for metrics storage
  prometheus:
    image: prom/prometheus:v2.40.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/fip_alert_rules.yml:/etc/prometheus/fip_alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - aa-gateway-network

  # Prometheus Pushgateway for batch metrics
  pushgateway:
    image: prom/pushgateway:v1.6.0
    ports:
      - "9091:9091"
    restart: unless-stopped
    networks:
      - aa-gateway-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped
    networks:
      - aa-gateway-network

networks:
  aa-gateway-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
